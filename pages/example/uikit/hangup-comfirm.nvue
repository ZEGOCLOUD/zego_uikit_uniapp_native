<template>
    <ZegoUIKitPrebuiltCall :appID="appID" :callID="callID" :appSign="appSign" :userID="userID" :userName="userName"
        :config="config">
    </ZegoUIKitPrebuiltCall>
</template>
<script lang="ts" setup>
import { ref } from "vue"
import keyCenter from "@/pages/KeyCenter";
import ZegoUIKitPrebuiltCall from "@/uni_modules/zego-PrebuiltCall/components/ZegoUIKitPrebuiltCall.nvue"
import { ZegoUIKitPrebuiltCallConfig } from "@/uni_modules/zego-PrebuiltCall"

const appID = ref(keyCenter.getAppID());
const appSign = ref(keyCenter.getAppSign());
const userID = ref(keyCenter.getUserID());
const userName = ref(keyCenter.getUserID() + '_Nick');
const callID = ref(keyCenter.getCallID());

const config: ZegoUIKitPrebuiltCallConfig = {
    ...ZegoUIKitPrebuiltCallConfig.oneOnOneVideoCall(), // 预设配置
    hangUpConfirmInfo: {
        title: "提醒",
        message: "真的要离开吗?",
        cancelButtonName: "点错了",
        confirmButtonName: "就要"
    },
    durationConfig: {
        showDuration: true,
        onDurationUpdate: (seconds) => {
            console.log(`已经通话的时长: ${seconds} 秒`);
        }
    },
    onHangUpConfirmation: () => {
        return new Promise((resolve, reject) => {
            uni.showModal({
                title: "警告",
                content: "确定退出吗?",
                showCancel: true,
                confirmText: "对的",
                cancelText: "不是",
                success: function (res) {
                    if (res.confirm) {
                        resolve(true)
                    } else if (res.cancel) {
                        resolve(false)
                    }
                }
            });
        });
    },
    onHangUp: () => {
        // 挂断后返回上一页
        uni.navigateBack()
    },
    onNetworkStatusChange: (res) => {
        if (res.isConnected) {
            uni.showToast({
                title: '网络已恢复',
                icon: 'none'
            })
        } else {
            uni.showToast({
                title: '网络已断开',
                icon: 'none'
            })
        }
    },
};

</script>

<style scoped></style>
